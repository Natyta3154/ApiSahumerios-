package com.example.AppSaumerios.Service;

import com.example.AppSaumerios.Service.UsuarioService;
import com.example.AppSaumerios.entity.Usuarios;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import io.jsonwebtoken.Jwts;
import io.jsonwebtoken.SignatureAlgorithm;

import java.util.Date;
import java.util.Optional;

@Service
public class AuthService {

    private final UsuarioService usuarioService;

    @Value("${JWT_SECRET_KEY}")
    private String SECRET_KEY;

    public AuthService(UsuarioService usuarioService) {
        this.usuarioService = usuarioService;
    }

    public Optional<String> login(String email, String password) {
        Optional<Usuarios> usuario = usuarioService.login(email, password);
        if (usuario.isPresent()) {
            String token = Jwts.builder()
                    .setSubject(usuario.get().getId().toString())
                    .claim("rol", usuario.get().getRol())
                    .setIssuedAt(new Date())
                    .setExpiration(new Date(System.currentTimeMillis() + 1000 * 60 * 60 * 2)) // 2 horas
                    .signWith(SignatureAlgorithm.HS256, SECRET_KEY)
                    .compact();
            return Optional.of(token);
        }
        return Optional.empty();
    }
}
